@---------------------------------------------------------------------------------
@ gba_helpers.s - Helper assembly functions for GBA
@---------------------------------------------------------------------------------
	.arm
	.align

	.global VBlankIntrWait
	.global VBlankIntrDelay
	.global isr_master
	.global memcpy16
	.global memcpy32
	.global memset16
	.global memset32
	.global BitUnPack
	.global sys8Font
	.global MEM_VRAM_ADDR
	.global tte_plot
	.global get_system_ticks

@---------------------------------------------------------------------------------
@ VBlankIntrWait - Wait for VBlank interrupt
@---------------------------------------------------------------------------------
VBlankIntrWait:
	mov	r0, #1
	swi	#0x05
	bx	lr

@---------------------------------------------------------------------------------
@ VBlankIntrDelay - Delay for specified VBlanks
@---------------------------------------------------------------------------------
VBlankIntrDelay:
	push	{lr}
.delay_loop:
	subs	r0, #1
	bmi	.delay_end
	bl	VBlankIntrWait
	b	.delay_loop
.delay_end:
	pop	{pc}

@---------------------------------------------------------------------------------
@ memcpy16 - Copy halfwords
@---------------------------------------------------------------------------------
memcpy16:
	cmp	r2, #0
	bxeq	lr
	push	{r4}
.loop16:
	ldrh	r3, [r1], #2
	strh	r3, [r0], #2
	subs	r2, #1
	bne	.loop16
	pop	{r4}
	bx	lr

@---------------------------------------------------------------------------------
@ memcpy32 - Copy words
@---------------------------------------------------------------------------------
memcpy32:
	cmp	r2, #0
	bxeq	lr
.loop32:
	ldr	r3, [r1], #4
	str	r3, [r0], #4
	subs	r2, #1
	bne	.loop32
	bx	lr

@---------------------------------------------------------------------------------
@ memset16 - Set halfwords
@---------------------------------------------------------------------------------
memset16:
	cmp	r2, #0
	bxeq	lr
.set16:
	strh	r1, [r0], #2
	subs	r2, #1
	bne	.set16
	bx	lr

@---------------------------------------------------------------------------------
@ memset32 - Set words
@---------------------------------------------------------------------------------
memset32:
	cmp	r2, #0
	bxeq	lr
.set32:
	str	r1, [r0], #4
	subs	r2, #1
	bne	.set32
	bx	lr

@---------------------------------------------------------------------------------
@ BitUnPack - Stub
@---------------------------------------------------------------------------------
BitUnPack:
	bx	lr

@---------------------------------------------------------------------------------
@ get_system_ticks - Simple tick counter
@---------------------------------------------------------------------------------
get_system_ticks:
	ldr	r0, =tick_counter
	ldr	r0, [r0]
	bx	lr

@---------------------------------------------------------------------------------
@ tte_plot - Plot a pixel (stub)
@---------------------------------------------------------------------------------
tte_plot:
	bx	lr

@---------------------------------------------------------------------------------
@ MEM_VRAM_ADDR - Return VRAM address
@---------------------------------------------------------------------------------
MEM_VRAM_ADDR:
	mov	r0, #0x06000000
	bx	lr

@---------------------------------------------------------------------------------
@ isr_master - ISR master routine (stub)
@---------------------------------------------------------------------------------
isr_master:
	bx	lr

@---------------------------------------------------------------------------------
@ Data
@---------------------------------------------------------------------------------
	.data
tick_counter:
	.word	0

sys8Font:
	.space	2048


@---------------------------------------------------------------------------------
@ Additional missing functions
@---------------------------------------------------------------------------------

	.global RegisterRamReset
	.global tte_get_margins
	.global tte_init_con

RegisterRamReset:
	swi	#0x01
	bx	lr

tte_get_margins:
	bx	lr

tte_init_con:
	bx	lr

.end
